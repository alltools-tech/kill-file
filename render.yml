services:
  - type: web
    name: kill-file-api
    env: docker
    plan: starter
    dockerfilePath: ./docker/api.Dockerfile
    envVars:
      - key: REDIS_HOST
        value: redis
      - key: MINIO_ENDPOINT
        value: http://minio:9000
      - key: MINIO_ROOT_USER
        value: minioadmin
      - key: MINIO_ROOT_PASSWORD
        value: minioadmin
      - key: MINIO_BUCKET
        value: uploads
      # Add your other ENV as needed
    ports:
      - 8080

  - type: worker
    name: kill-file-worker
    env: docker
    plan: starter
    dockerfilePath: ./docker/worker.Dockerfile
    envVars:
      - key: REDIS_HOST
        value: redis
      - key: MINIO_ENDPOINT
        value: http://minio:9000
      - key: MINIO_ROOT_USER
        value: minioadmin
      - key: MINIO_ROOT_PASSWORD
        value: minioadmin
      - key: MINIO_BUCKET
        value: uploads

  - type: pserv
    name: minio
    env: docker
    plan: starter
    dockerfilePath: docker/minio.Dockerfile
    envVars:
      - key: MINIO_ROOT_USER
        value: minioadmin
      - key: MINIO_ROOT_PASSWORD
        value: minioadmin
    disks:
      - name: miniodata
        mountPath: /data
        sizeGB: 10
    ports:
      - 9000

  - type: pserv
    name: redis
    env: docker
    plan: starter
    dockerfilePath: docker/redis.Dockerfile
    ports:
      - 6379

  - type: pserv
    name: postgres
    env: docker
    plan: starter
    dockerfilePath: docker/postgres.Dockerfile
    envVars:
      - key: POSTGRES_DB
        value: killfile
      - key: POSTGRES_USER
        value: killuser
      - key: POSTGRES_PASSWORD
        value: killpassword
    disks:
      - name: pgdata
        mountPath: /var/lib/postgresql/data
        sizeGB: 10
    ports:
      - 5432